20-03-22 18:26:36, INFO: Using cuda
20-03-22 18:26:37, INFO: Generating 5000000 triplets
20-03-22 18:29:14, INFO: 
parsed options:
{'w1bsroot': './data/sets/wxbs-descriptors-benchmark/code/', 'dataroot': 'data/sets/', 'enable_logging': False, 'log_dir': 'data/logs/', 'model_dir': 'data/models/', 'experiment_name': 'liberty_train/', 'training_set': 'liberty', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'pin_memory': True, 'decor': False, 'anchorave': False, 'imageSize': 32, 'mean_image': 0.443728476019, 'std_image': 0.20197947209, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 5000000, 'margin': 1.0, 'gor': False, 'freq': 10.0, 'alpha': 1.0, 'lr': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'wd': 0.0001, 'optimizer': 'sgd', 'no_cuda': False, 'gpu_id': '3', 'seed': 0, 'log_interval': 10, 'cuda': True}

20-03-22 19:39:49, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_0.pth
20-03-22 19:40:24, INFO: [91mTest set: Accuracy(FPR95): 0.01236000
[0m
20-03-22 19:40:58, INFO: [91mTest set: Accuracy(FPR95): 0.04174000
[0m
20-03-22 19:40:59, INFO: Generating 5000000 triplets
20-03-22 20:53:52, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_1.pth
20-03-22 20:54:25, INFO: [91mTest set: Accuracy(FPR95): 0.00962000
[0m
20-03-22 20:54:59, INFO: [91mTest set: Accuracy(FPR95): 0.02930000
[0m
20-03-22 20:55:00, INFO: Generating 5000000 triplets
20-03-22 22:08:07, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_2.pth
20-03-22 22:08:41, INFO: [91mTest set: Accuracy(FPR95): 0.00990000
[0m
20-03-22 22:09:15, INFO: [91mTest set: Accuracy(FPR95): 0.03542000
[0m
20-03-22 22:09:16, INFO: Generating 5000000 triplets
20-03-22 23:22:09, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_3.pth
20-03-22 23:22:43, INFO: [91mTest set: Accuracy(FPR95): 0.00842000
[0m
20-03-22 23:23:16, INFO: [91mTest set: Accuracy(FPR95): 0.02588000
[0m
20-03-22 23:23:17, INFO: Generating 5000000 triplets
20-03-23 00:36:10, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_4.pth
20-03-23 00:36:44, INFO: [91mTest set: Accuracy(FPR95): 0.00948000
[0m
20-03-23 00:37:17, INFO: [91mTest set: Accuracy(FPR95): 0.02714000
[0m
20-03-23 00:37:18, INFO: Generating 5000000 triplets
20-03-23 01:50:14, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_5.pth
20-03-23 01:50:48, INFO: [91mTest set: Accuracy(FPR95): 0.00736000
[0m
20-03-23 01:51:22, INFO: [91mTest set: Accuracy(FPR95): 0.03132000
[0m
20-03-23 01:51:23, INFO: Generating 5000000 triplets
20-03-23 03:04:19, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_6.pth
20-03-23 03:04:53, INFO: [91mTest set: Accuracy(FPR95): 0.00664000
[0m
20-03-23 03:05:27, INFO: [91mTest set: Accuracy(FPR95): 0.02516000
[0m
20-03-23 03:05:27, INFO: Generating 5000000 triplets
20-03-23 03:38:02, INFO: Using cuda
20-03-23 03:38:26, INFO: Generating 5000000 triplets
20-03-23 04:18:42, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_7.pth
20-03-23 04:19:16, INFO: [91mTest set: Accuracy(FPR95): 0.00752000
[0m
20-03-23 04:19:50, INFO: [91mTest set: Accuracy(FPR95): 0.02384000
[0m
20-03-23 04:19:51, INFO: Generating 5000000 triplets
20-03-23 05:34:56, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_8.pth
20-03-23 05:35:51, INFO: [91mTest set: Accuracy(FPR95): 0.00620000
[0m
20-03-23 05:36:52, INFO: [91mTest set: Accuracy(FPR95): 0.02686000
[0m
20-03-23 05:36:53, INFO: Generating 5000000 triplets
20-03-23 06:57:54, INFO: data/models/liberty_train/_liberty_min_as/checkpoint_9.pth
20-03-23 06:58:27, INFO: [91mTest set: Accuracy(FPR95): 0.00578000
[0m
20-03-23 06:59:01, INFO: [91mTest set: Accuracy(FPR95): 0.02200000
[0m
20-03-23 06:59:11, INFO: Generating 5000000 triplets
20-03-25 17:48:13, DEBUG: $HOME=/home/namvh
20-03-25 17:48:13, DEBUG: CONFIGDIR=/home/namvh/.config/matplotlib
20-03-25 17:48:13, DEBUG: matplotlib data path: /home/namvh/.local/lib/python3.6/site-packages/matplotlib/mpl-data
20-03-25 17:48:13, DEBUG: loaded rc file /home/namvh/.local/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
20-03-25 17:48:13, DEBUG: matplotlib version 3.1.1
20-03-25 17:48:13, DEBUG: interactive is False
20-03-25 17:48:13, DEBUG: platform is linux
20-03-25 17:48:13, DEBUG: loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.common', 'jedi.common.value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.inference.compiled.mixed', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_14', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'PIL', 'PIL._version', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._exceptions', 'numpy.core._asarray', 'numpy.core._ufunc_config', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.common', 'numpy.random.bounded_integers', 'numpy.random.mt19937', 'numpy.random.bit_generator', '_cython_0_29_13', 'secrets', 'numpy.random.philox', 'numpy.random.pcg64', 'numpy.random.sfc64', 'numpy.random.generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'cv2', 'cv2.Error', 'cv2.aruco', 'cv2.bgsegm', 'cv2.bioinspired', 'cv2.cuda', 'cv2.datasets', 'cv2.detail', 'cv2.dnn', 'cv2.face', 'cv2.fisheye', 'cv2.flann', 'cv2.freetype', 'cv2.ft', 'cv2.hdf', 'cv2.hfs', 'cv2.img_hash', 'cv2.instr', 'cv2.ipp', 'cv2.line_descriptor', 'cv2.linemod', 'cv2.ml', 'cv2.motempl', 'cv2.multicalib', 'cv2.ocl', 'cv2.ogl', 'cv2.omnidir', 'cv2.optflow', 'cv2.plot', 'cv2.ppf_match_3d', 'cv2.reg', 'cv2.rgbd', 'cv2.saliency', 'cv2.structured_light', 'cv2.text', 'cv2.videostab', 'cv2.xfeatures2d', 'cv2.ximgproc', 'cv2.ximgproc.segmentation', 'cv2.xphoto', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.streams', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch.nn._VF', 'torch._jit_internal', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch.distributed', 'torch.distributed.autograd', 'torch.distributed.distributed_c10d', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.internal_rpc_utils', 'torch.distributed.rpc_backend_registry', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.backends', 'torch.backends.cudnn', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'zipfile', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.QConfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torchvision', 'torchvision.models', 'torchvision.models.alexnet', 'torchvision.models.utils', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torchvision.models.densenet', 'torch.utils.checkpoint', 'torchvision.models.googlenet', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.segmentation', 'torchvision.models.segmentation.segmentation', 'torchvision.models._utils', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.detection', 'torchvision.models.detection.faster_rcnn', 'torchvision.ops', 'torchvision.ops.boxes', 'torchvision.extension', 'torchvision.ops.roi_align', 'torchvision.ops._utils', 'torchvision.ops.roi_pool', 'torchvision.ops.poolers', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops.misc', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.rpn', 'torchvision.models.detection._utils', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.transform', 'torchvision.models.detection.image_list', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.video', 'torchvision.models.video.resnet', 'torchvision.datasets', 'torchvision.datasets.lsun', 'torchvision.datasets.vision', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'torchvision.datasets.utils', 'gzip', 'torch.utils.model_zoo', 'torchvision.datasets.folder', 'torchvision.datasets.coco', 'torchvision.datasets.cifar', 'torchvision.datasets.stl10', 'torchvision.datasets.mnist', 'torchvision.datasets.svhn', 'torchvision.datasets.phototour', 'torchvision.datasets.fakedata', 'torchvision.transforms', 'torchvision.transforms.transforms', 'torchvision.transforms.functional', 'PIL.ImageOps', 'PIL.ImageEnhance', 'PIL.ImageFilter', 'PIL.ImageStat', 'torchvision.datasets.semeion', 'torchvision.datasets.omniglot', 'torchvision.datasets.sbu', 'torchvision.datasets.flickr', 'html.parser', '_markupbase', 'torchvision.datasets.voc', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'torchvision.datasets.cityscapes', 'torchvision.datasets.imagenet', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.sbd', 'torchvision.datasets.usps', 'torchvision.datasets.kinetics', 'torchvision.datasets.video_utils', 'fractions', 'torchvision.io', 'torchvision.io.video', 'torchvision.io._video_opt', 'torchvision.datasets.hmdb51', 'torchvision.datasets.ucf101', 'torchvision.utils', 'torchvision.version', 'torchvision._C', 'eval_metrics', 'models', 'utils', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'dataset', 'losses', 'constants', 'multiprocessing.synchronize', 'PIL.BmpImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.GifImagePlugin', 'PIL.ImageChops', 'PIL.ImageSequence', 'PIL.JpegImagePlugin', 'PIL.TiffImagePlugin', 'PIL.JpegPresets', 'PIL.PpmImagePlugin', 'PIL.PngImagePlugin', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
20-03-25 17:48:13, DEBUG: CACHEDIR=/home/namvh/.cache/matplotlib
20-03-25 17:48:13, DEBUG: Using fontManager instance from /home/namvh/.cache/matplotlib/fontlist-v310.json
20-03-25 17:48:14, DEBUG: Loaded backend module://ipykernel.pylab.backend_inline version unknown.
20-03-25 17:48:14, DEBUG: Loaded backend module://ipykernel.pylab.backend_inline version unknown.
20-03-25 17:48:14, DEBUG: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
20-03-25 17:48:14, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
20-03-25 17:48:14, DEBUG: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/namvh/.local/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
20-03-25 17:50:03, INFO: {'dataset': {'dataroot': 'data/', 'model_dir': 'models/', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'liberty', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'liberty_train/', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 100000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 0, 'seed': 0, 'log_interval': 10}}
20-03-25 17:53:44, INFO: models/liberty_train//checkpoint_0_20-03-25_17:53:43.pth
20-03-25 17:55:39, INFO: [91mTest set: Accuracy(FPR95): 0.06136000
[0m
20-03-25 17:58:59, INFO: models/liberty_train//checkpoint_1_20-03-25_17:58:59.pth
20-03-25 18:00:49, INFO: [91mTest set: Accuracy(FPR95): 0.02700000
[0m
20-03-25 18:04:03, INFO: models/liberty_train//checkpoint_2_20-03-25_18:04:02.pth
20-03-25 18:06:04, INFO: [91mTest set: Accuracy(FPR95): 0.01776000
[0m
20-03-25 18:32:27, INFO: {'dataset': {'dataroot': 'data/', 'model_dir': 'models/', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'reichstag', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'reichstag/', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 5000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 1, 'seed': 0, 'log_interval': 10}}
20-03-25 20:55:47, INFO: models/reichstag//checkpoint_20-03-25_20:55:46_0.pth
20-03-25 20:55:47, INFO: Test on notredame dataset
20-03-25 20:58:13, INFO: [91mTest set: Accuracy(FPR95): 0.28892000
[0m
20-03-25 20:58:13, INFO: Test on yosemite dataset
20-03-25 21:00:53, INFO: [91mTest set: Accuracy(FPR95): 0.38530000
[0m
20-03-26 00:02:28, INFO: models/reichstag//checkpoint_20-03-26_00:02:28_1.pth
20-03-26 00:02:28, INFO: Test on notredame dataset
20-03-26 00:04:57, INFO: [91mTest set: Accuracy(FPR95): 0.28136000
[0m
20-03-26 00:04:57, INFO: Test on yosemite dataset
20-03-26 00:07:25, INFO: [91mTest set: Accuracy(FPR95): 0.36100000
[0m
20-03-26 03:08:34, INFO: models/reichstag//checkpoint_20-03-26_03:08:33_2.pth
20-03-26 03:08:34, INFO: Test on notredame dataset
20-03-26 03:11:13, INFO: [91mTest set: Accuracy(FPR95): 0.30840000
[0m
20-03-26 03:11:13, INFO: Test on yosemite dataset
20-03-26 03:13:36, INFO: [91mTest set: Accuracy(FPR95): 0.39148000
[0m
20-03-26 05:56:22, INFO: models/reichstag//checkpoint_20-03-26_05:56:21_3.pth
20-03-26 05:56:22, INFO: Test on notredame dataset
20-03-26 05:58:03, INFO: [91mTest set: Accuracy(FPR95): 0.31794000
[0m
20-03-26 05:58:03, INFO: Test on yosemite dataset
20-03-26 05:59:45, INFO: [91mTest set: Accuracy(FPR95): 0.39316000
[0m
20-03-26 08:41:17, INFO: {'dataset': {'dataroot': 'data/', 'model_dir': 'models/', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'reichstag', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'reichstag/', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 1000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 3, 'seed': 0, 'log_interval': 10}}
20-03-26 09:04:52, INFO: models/reichstag//checkpoint_20-03-26_09:04:51_0.pth
20-03-26 09:04:52, INFO: Test on notredame dataset
20-03-26 09:05:29, INFO: [91mTest set: Accuracy(FPR95): 0.02314000
[0m
20-03-26 09:05:29, INFO: Test on yosemite dataset
20-03-26 09:06:07, INFO: [91mTest set: Accuracy(FPR95): 0.05108000
[0m
20-03-26 09:06:07, INFO: Test on reichstag dataset
20-03-26 09:06:44, INFO: [91mTest set: Accuracy(FPR95): 0.06312000
[0m
20-03-26 09:30:49, INFO: models/reichstag//checkpoint_20-03-26_09:30:49_1.pth
20-03-26 09:30:49, INFO: Test on notredame dataset
20-03-26 09:31:28, INFO: [91mTest set: Accuracy(FPR95): 0.01436000
[0m
20-03-26 09:31:28, INFO: Test on yosemite dataset
20-03-26 09:32:08, INFO: [91mTest set: Accuracy(FPR95): 0.03996000
[0m
20-03-26 09:32:08, INFO: Test on reichstag dataset
20-03-26 09:32:46, INFO: [91mTest set: Accuracy(FPR95): 0.04498000
[0m
20-03-26 09:56:54, INFO: models/reichstag//checkpoint_20-03-26_09:56:53_2.pth
20-03-26 09:56:54, INFO: Test on notredame dataset
20-03-26 09:57:33, INFO: [91mTest set: Accuracy(FPR95): 0.01324000
[0m
20-03-26 09:57:33, INFO: Test on yosemite dataset
20-03-26 09:58:11, INFO: [91mTest set: Accuracy(FPR95): 0.03610000
[0m
20-03-26 09:58:11, INFO: Test on reichstag dataset
20-03-26 09:58:51, INFO: [91mTest set: Accuracy(FPR95): 0.04708000
[0m
20-03-26 10:22:59, INFO: models/reichstag//checkpoint_20-03-26_10:22:58_3.pth
20-03-26 10:22:59, INFO: Test on notredame dataset
20-03-26 10:23:38, INFO: [91mTest set: Accuracy(FPR95): 0.01040000
[0m
20-03-26 10:23:38, INFO: Test on yosemite dataset
20-03-26 10:24:16, INFO: [91mTest set: Accuracy(FPR95): 0.03426000
[0m
20-03-26 10:24:16, INFO: Test on reichstag dataset
20-03-26 10:24:55, INFO: [91mTest set: Accuracy(FPR95): 0.04550000
[0m
20-03-26 10:49:00, INFO: models/reichstag//checkpoint_20-03-26_10:49:00_4.pth
20-03-26 10:49:00, INFO: Test on notredame dataset
20-03-26 10:49:40, INFO: [91mTest set: Accuracy(FPR95): 0.00894000
[0m
20-03-26 10:49:40, INFO: Test on yosemite dataset
20-03-26 10:50:19, INFO: [91mTest set: Accuracy(FPR95): 0.03426000
[0m
20-03-26 10:50:19, INFO: Test on reichstag dataset
20-03-26 10:50:58, INFO: [91mTest set: Accuracy(FPR95): 0.04190000
[0m
20-03-26 11:15:05, INFO: models/reichstag//checkpoint_20-03-26_11:15:04_5.pth
20-03-26 11:15:05, INFO: Test on notredame dataset
20-03-26 11:15:44, INFO: [91mTest set: Accuracy(FPR95): 0.01016000
[0m
20-03-26 11:15:44, INFO: Test on yosemite dataset
20-03-26 11:16:22, INFO: [91mTest set: Accuracy(FPR95): 0.03432000
[0m
20-03-26 11:16:22, INFO: Test on reichstag dataset
20-03-26 11:17:01, INFO: [91mTest set: Accuracy(FPR95): 0.04176000
[0m
20-03-26 11:41:09, INFO: models/reichstag//checkpoint_20-03-26_11:41:08_6.pth
20-03-26 11:41:09, INFO: Test on notredame dataset
20-03-26 11:41:48, INFO: [91mTest set: Accuracy(FPR95): 0.00756000
[0m
20-03-26 11:41:48, INFO: Test on yosemite dataset
20-03-26 11:42:26, INFO: [91mTest set: Accuracy(FPR95): 0.02648000
[0m
20-03-26 11:42:26, INFO: Test on reichstag dataset
20-03-26 11:43:05, INFO: [91mTest set: Accuracy(FPR95): 0.03498000
[0m
20-03-26 12:07:13, INFO: models/reichstag//checkpoint_20-03-26_12:07:12_7.pth
20-03-26 12:07:13, INFO: Test on notredame dataset
20-03-26 12:07:52, INFO: [91mTest set: Accuracy(FPR95): 0.00756000
[0m
20-03-26 12:07:52, INFO: Test on yosemite dataset
20-03-26 12:08:31, INFO: [91mTest set: Accuracy(FPR95): 0.02806000
[0m
20-03-26 12:08:31, INFO: Test on reichstag dataset
20-03-26 12:09:10, INFO: [91mTest set: Accuracy(FPR95): 0.03838000
[0m
20-03-26 12:33:18, INFO: models/reichstag//checkpoint_20-03-26_12:33:18_8.pth
20-03-26 12:33:18, INFO: Test on notredame dataset
20-03-26 12:33:57, INFO: [91mTest set: Accuracy(FPR95): 0.00660000
[0m
20-03-26 12:33:57, INFO: Test on yosemite dataset
20-03-26 12:34:37, INFO: [91mTest set: Accuracy(FPR95): 0.02642000
[0m
20-03-26 12:34:37, INFO: Test on reichstag dataset
20-03-26 12:35:15, INFO: [91mTest set: Accuracy(FPR95): 0.03704000
[0m
20-03-26 12:59:23, INFO: models/reichstag//checkpoint_20-03-26_12:59:22_9.pth
20-03-26 12:59:23, INFO: Test on notredame dataset
20-03-26 13:00:02, INFO: [91mTest set: Accuracy(FPR95): 0.00646000
[0m
20-03-26 13:00:02, INFO: Test on yosemite dataset
20-03-26 13:00:41, INFO: [91mTest set: Accuracy(FPR95): 0.02378000
[0m
20-03-26 13:00:41, INFO: Test on reichstag dataset
20-03-26 13:01:20, INFO: [91mTest set: Accuracy(FPR95): 0.03580000
[0m
20-03-26 16:55:42, INFO: {'dataset': {'dataroot': 'data/', 'model_dir': 'models/', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'reichstag', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'reichstag/', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 1000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 3, 'seed': 0, 'log_interval': 10}}
20-03-26 17:19:15, INFO: models/reichstag/checkpoint_20-03-26_17:19:14_0.pth
20-03-26 17:19:15, INFO: Test on buckingham_palace dataset
20-03-26 17:19:55, INFO: [91mTest set: Accuracy(FPR95): 0.03770000
[0m
20-03-26 17:43:43, INFO: {'dataset': {'dataroot': 'data', 'model_dir': 'models', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'reichstag', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'reichstag', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 1000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 3, 'seed': 0, 'log_interval': 10}}
20-03-26 18:07:15, INFO: models/reichstag/checkpoint_20-03-26_18:07:14_0.pth
20-03-26 18:07:15, INFO: Test on notredame dataset
20-03-26 18:07:55, INFO: [91mTest set: Accuracy(FPR95): 0.31380000
[0m
20-03-26 18:07:55, INFO: Test on yosemite dataset
20-03-26 18:08:33, INFO: [91mTest set: Accuracy(FPR95): 0.39336000
[0m
20-03-26 18:08:33, INFO: Test on buckingham_palace dataset
20-03-26 18:09:13, INFO: [91mTest set: Accuracy(FPR95): 0.03770000
[0m
20-03-26 18:33:25, INFO: models/reichstag/checkpoint_20-03-26_18:33:24_1.pth
20-03-26 18:33:25, INFO: Test on notredame dataset
20-03-26 18:34:04, INFO: [91mTest set: Accuracy(FPR95): 0.31918000
[0m
20-03-26 18:34:04, INFO: Test on yosemite dataset
20-03-26 18:34:44, INFO: [91mTest set: Accuracy(FPR95): 0.41032000
[0m
20-03-26 18:34:44, INFO: Test on buckingham_palace dataset
20-03-26 18:35:24, INFO: [91mTest set: Accuracy(FPR95): 0.02892000
[0m
20-03-26 18:59:35, INFO: models/reichstag/checkpoint_20-03-26_18:59:34_2.pth
20-03-26 18:59:35, INFO: Test on notredame dataset
20-03-26 19:00:15, INFO: [91mTest set: Accuracy(FPR95): 0.30990000
[0m
20-03-26 19:00:15, INFO: Test on yosemite dataset
20-03-26 19:00:55, INFO: [91mTest set: Accuracy(FPR95): 0.38362000
[0m
20-03-26 19:00:55, INFO: Test on buckingham_palace dataset
20-03-26 19:01:34, INFO: [91mTest set: Accuracy(FPR95): 0.03008000
[0m
20-03-26 19:25:46, INFO: models/reichstag/checkpoint_20-03-26_19:25:45_3.pth
20-03-26 19:25:46, INFO: Test on notredame dataset
20-03-26 19:26:25, INFO: [91mTest set: Accuracy(FPR95): 0.30032000
[0m
20-03-26 19:26:25, INFO: Test on yosemite dataset
20-03-26 19:27:05, INFO: [91mTest set: Accuracy(FPR95): 0.38940000
[0m
20-03-26 19:27:05, INFO: Test on buckingham_palace dataset
20-03-26 19:27:44, INFO: [91mTest set: Accuracy(FPR95): 0.02708000
[0m
20-03-26 19:51:53, INFO: models/reichstag/checkpoint_20-03-26_19:51:53_4.pth
20-03-26 19:51:53, INFO: Test on notredame dataset
20-03-26 19:52:33, INFO: [91mTest set: Accuracy(FPR95): 0.30908000
[0m
20-03-26 19:52:33, INFO: Test on yosemite dataset
20-03-26 19:53:13, INFO: [91mTest set: Accuracy(FPR95): 0.39964000
[0m
20-03-26 19:53:13, INFO: Test on buckingham_palace dataset
20-03-26 19:53:53, INFO: [91mTest set: Accuracy(FPR95): 0.02744000
[0m
20-03-26 20:18:05, INFO: models/reichstag/checkpoint_20-03-26_20:18:04_5.pth
20-03-26 20:18:05, INFO: Test on notredame dataset
20-03-26 20:18:44, INFO: [91mTest set: Accuracy(FPR95): 0.31514000
[0m
20-03-26 20:18:44, INFO: Test on yosemite dataset
20-03-26 20:19:24, INFO: [91mTest set: Accuracy(FPR95): 0.40410000
[0m
20-03-26 20:19:24, INFO: Test on buckingham_palace dataset
20-03-26 20:20:03, INFO: [91mTest set: Accuracy(FPR95): 0.03068000
[0m
20-03-26 20:44:16, INFO: models/reichstag/checkpoint_20-03-26_20:44:15_6.pth
20-03-26 20:44:16, INFO: Test on notredame dataset
20-03-26 20:44:55, INFO: [91mTest set: Accuracy(FPR95): 0.31046000
[0m
20-03-26 20:44:55, INFO: Test on yosemite dataset
20-03-26 20:45:35, INFO: [91mTest set: Accuracy(FPR95): 0.40414000
[0m
20-03-26 20:45:35, INFO: Test on buckingham_palace dataset
20-03-26 20:46:14, INFO: [91mTest set: Accuracy(FPR95): 0.02912000
[0m
20-03-26 21:10:25, INFO: models/reichstag/checkpoint_20-03-26_21:10:25_7.pth
20-03-26 21:10:25, INFO: Test on notredame dataset
20-03-26 21:11:05, INFO: [91mTest set: Accuracy(FPR95): 0.34024000
[0m
20-03-26 21:11:05, INFO: Test on yosemite dataset
20-03-26 21:11:45, INFO: [91mTest set: Accuracy(FPR95): 0.41782000
[0m
20-03-26 21:11:45, INFO: Test on buckingham_palace dataset
20-03-26 21:12:25, INFO: [91mTest set: Accuracy(FPR95): 0.03000000
[0m
20-03-26 21:36:36, INFO: models/reichstag/checkpoint_20-03-26_21:36:36_8.pth
20-03-26 21:36:36, INFO: Test on notredame dataset
20-03-26 21:37:16, INFO: [91mTest set: Accuracy(FPR95): 0.32648000
[0m
20-03-26 21:37:16, INFO: Test on yosemite dataset
20-03-26 21:37:56, INFO: [91mTest set: Accuracy(FPR95): 0.40846000
[0m
20-03-26 21:37:56, INFO: Test on buckingham_palace dataset
20-03-26 21:38:35, INFO: [91mTest set: Accuracy(FPR95): 0.03196000
[0m
20-03-26 22:02:46, INFO: models/reichstag/checkpoint_20-03-26_22:02:46_9.pth
20-03-26 22:02:46, INFO: Test on notredame dataset
20-03-26 22:03:26, INFO: [91mTest set: Accuracy(FPR95): 0.32306000
[0m
20-03-26 22:03:26, INFO: Test on yosemite dataset
20-03-26 22:04:06, INFO: [91mTest set: Accuracy(FPR95): 0.40884000
[0m
20-03-26 22:04:06, INFO: Test on buckingham_palace dataset
20-03-26 22:04:45, INFO: [91mTest set: Accuracy(FPR95): 0.03028000
[0m
20-03-27 10:28:01, INFO: {'dataset': {'dataroot': 'data', 'model_dir': 'models', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'reichstag', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'reichstag', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': 'checkpoint_9_20-03-26_12:59:22.pth', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 1000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 0, 'seed': 0, 'log_interval': 10}}
20-03-27 10:28:04, INFO: => no checkpoint found at checkpoint_9_20-03-26_12:59:22.pth
20-03-27 10:29:07, INFO: {'dataset': {'dataroot': 'data', 'model_dir': 'models', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209, 'training_set': 'reichstag', 'test_set': {'set_1': 'notredame', 'set_2': 'yosemite'}}, 'experiment_name': 'reichstag', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': 'models/reichstag/checkpoint_9_20-03-26_12:59:22.pth', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 1000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 0, 'seed': 0, 'log_interval': 10}}
20-03-27 10:29:08, INFO: => loading checkpoint models/reichstag/checkpoint_9_20-03-26_12:59:22.pth
20-03-27 10:30:11, INFO: [91mTest set: Accuracy(FPR95): 0.00646000
[0m
20-03-27 15:50:34, INFO: 

================ IMAGE MATCHING CHALLENGE 2020 ==================


20-03-27 15:56:57, INFO: 

================ IMAGE MATCHING CHALLENGE 2020 ==================


20-03-27 16:04:18, INFO: {'dataset': {'dataroot': 'data', 'model_dir': 'models', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209}, 'experiment_name': 'train_on_challenge_data', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 5000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 0, 'seed': 0, 'log_interval': 10}}
20-03-27 16:04:18, INFO: Train on buckingham_palace
20-03-27 18:13:05, INFO: models/train_on_challenge_data/checkpoint_20-03-27_18:13:05_0.pth
20-03-27 18:13:05, INFO: Train on colosseum_exterior
20-03-27 18:15:15, INFO: 

================ IMAGE MATCHING CHALLENGE 2020 ==================


20-03-27 18:17:25, INFO: {'dataset': {'dataroot': 'data', 'model_dir': 'models', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209}, 'experiment_name': 'train_on_challenge_data', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 1000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 0, 'seed': 0, 'log_interval': 10}}
20-03-27 18:17:25, INFO: Train on buckingham_palace
20-03-27 18:41:26, INFO: models/train_on_challenge_data/checkpoint_20-03-27_18:41:24_0.pth
20-03-27 18:41:26, INFO: Train on colosseum_exterior
20-03-27 19:05:18, INFO: models/train_on_challenge_data/checkpoint_20-03-27_19:05:18_0.pth
20-03-27 19:05:18, INFO: Test on liberty dataset
20-03-27 19:05:58, INFO: [91mTest set: Accuracy(FPR95): 0.16954000
[0m
20-03-27 19:05:58, INFO: Test on notredame dataset
20-03-27 19:06:38, INFO: [91mTest set: Accuracy(FPR95): 0.12214000
[0m
20-03-27 19:06:38, INFO: Test on reichstag dataset
20-03-27 19:07:18, INFO: [91mTest set: Accuracy(FPR95): 0.00600000
[0m
20-03-27 19:07:18, INFO: Test on brandenburg_gate dataset
20-03-27 19:07:58, INFO: [91mTest set: Accuracy(FPR95): 0.01246000
[0m
20-03-27 19:09:20, INFO: Train on buckingham_palace
20-03-27 19:33:12, INFO: models/train_on_challenge_data/checkpoint_20-03-27_19:33:12_1.pth
20-03-27 19:33:14, INFO: Train on colosseum_exterior
20-03-27 19:57:06, INFO: models/train_on_challenge_data/checkpoint_20-03-27_19:57:06_1.pth
20-03-27 19:57:06, INFO: Test on liberty dataset
20-03-27 19:57:47, INFO: [91mTest set: Accuracy(FPR95): 0.13740000
[0m
20-03-27 19:57:47, INFO: Test on notredame dataset
20-03-27 19:58:27, INFO: [91mTest set: Accuracy(FPR95): 0.08654000
[0m
20-03-27 19:58:27, INFO: Test on reichstag dataset
20-03-27 19:59:08, INFO: [91mTest set: Accuracy(FPR95): 0.00458000
[0m
20-03-27 19:59:08, INFO: Test on brandenburg_gate dataset
20-03-27 19:59:48, INFO: [91mTest set: Accuracy(FPR95): 0.01094000
[0m
20-03-27 20:01:05, INFO: Train on buckingham_palace
20-03-27 20:24:57, INFO: models/train_on_challenge_data/checkpoint_20-03-27_20:24:56_2.pth
20-03-27 20:24:57, INFO: Train on colosseum_exterior
20-03-27 20:48:49, INFO: models/train_on_challenge_data/checkpoint_20-03-27_20:48:49_2.pth
20-03-27 20:48:49, INFO: Test on liberty dataset
20-03-27 20:49:30, INFO: [91mTest set: Accuracy(FPR95): 0.12500000
[0m
20-03-27 20:49:30, INFO: Test on notredame dataset
20-03-27 20:50:10, INFO: [91mTest set: Accuracy(FPR95): 0.08194000
[0m
20-03-27 20:50:10, INFO: Test on reichstag dataset
20-03-27 20:50:50, INFO: [91mTest set: Accuracy(FPR95): 0.00422000
[0m
20-03-27 20:50:50, INFO: Test on brandenburg_gate dataset
20-03-27 20:51:30, INFO: [91mTest set: Accuracy(FPR95): 0.00880000
[0m
20-03-27 20:52:49, INFO: Train on buckingham_palace
20-03-27 21:16:41, INFO: models/train_on_challenge_data/checkpoint_20-03-27_21:16:40_3.pth
20-03-27 21:16:41, INFO: Train on colosseum_exterior
20-03-27 21:40:33, INFO: models/train_on_challenge_data/checkpoint_20-03-27_21:40:33_3.pth
20-03-27 21:40:33, INFO: Test on liberty dataset
20-03-27 21:41:13, INFO: [91mTest set: Accuracy(FPR95): 0.10304000
[0m
20-03-27 21:41:13, INFO: Test on notredame dataset
20-03-27 21:41:54, INFO: [91mTest set: Accuracy(FPR95): 0.06402000
[0m
20-03-27 21:41:54, INFO: Test on reichstag dataset
20-03-27 21:42:34, INFO: [91mTest set: Accuracy(FPR95): 0.00360000
[0m
20-03-27 21:42:34, INFO: Test on brandenburg_gate dataset
20-03-27 21:43:14, INFO: [91mTest set: Accuracy(FPR95): 0.00746000
[0m
20-03-27 21:44:39, INFO: Train on buckingham_palace
20-03-27 22:08:30, INFO: models/train_on_challenge_data/checkpoint_20-03-27_22:08:29_4.pth
20-03-27 22:08:30, INFO: Train on colosseum_exterior
20-03-27 22:32:23, INFO: models/train_on_challenge_data/checkpoint_20-03-27_22:32:22_4.pth
20-03-27 22:32:23, INFO: Test on liberty dataset
20-03-27 22:33:03, INFO: [91mTest set: Accuracy(FPR95): 0.10406000
[0m
20-03-27 22:33:03, INFO: Test on notredame dataset
20-03-27 22:33:44, INFO: [91mTest set: Accuracy(FPR95): 0.06424000
[0m
20-03-27 22:33:44, INFO: Test on reichstag dataset
20-03-27 22:34:24, INFO: [91mTest set: Accuracy(FPR95): 0.00308000
[0m
20-03-27 22:34:24, INFO: Test on brandenburg_gate dataset
20-03-27 22:35:04, INFO: [91mTest set: Accuracy(FPR95): 0.00604000
[0m
20-03-27 22:36:23, INFO: Train on buckingham_palace
20-03-27 23:00:15, INFO: models/train_on_challenge_data/checkpoint_20-03-27_23:00:15_5.pth
20-03-27 23:00:15, INFO: Train on colosseum_exterior
20-03-27 23:24:07, INFO: models/train_on_challenge_data/checkpoint_20-03-27_23:24:06_5.pth
20-03-27 23:24:07, INFO: Test on liberty dataset
20-03-27 23:24:46, INFO: [91mTest set: Accuracy(FPR95): 0.95082000
[0m
20-03-27 23:24:46, INFO: Test on notredame dataset
20-03-27 23:25:27, INFO: [91mTest set: Accuracy(FPR95): 0.95048000
[0m
20-03-27 23:25:27, INFO: Test on reichstag dataset
20-03-27 23:26:07, INFO: [91mTest set: Accuracy(FPR95): 0.95406000
[0m
20-03-27 23:26:07, INFO: Test on brandenburg_gate dataset
20-03-27 23:26:47, INFO: [91mTest set: Accuracy(FPR95): 0.95528000
[0m
20-03-27 23:28:08, INFO: Train on buckingham_palace
20-03-27 23:52:09, INFO: models/train_on_challenge_data/checkpoint_20-03-27_23:52:09_6.pth
20-03-27 23:52:09, INFO: Train on colosseum_exterior
20-03-28 00:16:19, INFO: models/train_on_challenge_data/checkpoint_20-03-28_00:16:18_6.pth
20-03-28 00:16:19, INFO: Test on liberty dataset
20-03-28 00:17:11, INFO: [91mTest set: Accuracy(FPR95): 0.95058000
[0m
20-03-28 00:17:11, INFO: Test on notredame dataset
20-03-28 00:18:03, INFO: [91mTest set: Accuracy(FPR95): 0.95226000
[0m
20-03-28 00:18:03, INFO: Test on reichstag dataset
20-03-28 00:18:57, INFO: [91mTest set: Accuracy(FPR95): 0.95652000
[0m
20-03-28 00:18:57, INFO: Test on brandenburg_gate dataset
20-03-28 00:19:50, INFO: [91mTest set: Accuracy(FPR95): 0.95396000
[0m
20-03-28 00:21:59, INFO: Train on buckingham_palace
20-03-28 00:46:11, INFO: models/train_on_challenge_data/checkpoint_20-03-28_00:46:10_7.pth
20-03-28 00:46:11, INFO: Train on colosseum_exterior
20-03-28 01:10:52, INFO: models/train_on_challenge_data/checkpoint_20-03-28_01:10:51_7.pth
20-03-28 01:10:52, INFO: Test on liberty dataset
20-03-28 01:12:10, INFO: [91mTest set: Accuracy(FPR95): 0.95110000
[0m
20-03-28 01:12:10, INFO: Test on notredame dataset
20-03-28 01:13:29, INFO: [91mTest set: Accuracy(FPR95): 0.95282000
[0m
20-03-28 01:13:29, INFO: Test on reichstag dataset
20-03-28 01:14:45, INFO: [91mTest set: Accuracy(FPR95): 0.95574000
[0m
20-03-28 01:14:45, INFO: Test on brandenburg_gate dataset
20-03-28 01:16:02, INFO: [91mTest set: Accuracy(FPR95): 0.95422000
[0m
20-03-28 01:19:03, INFO: Train on buckingham_palace
20-03-28 01:44:04, INFO: models/train_on_challenge_data/checkpoint_20-03-28_01:44:03_8.pth
20-03-28 01:44:04, INFO: Train on colosseum_exterior
20-03-28 02:08:34, INFO: models/train_on_challenge_data/checkpoint_20-03-28_02:08:33_8.pth
20-03-28 02:08:34, INFO: Test on liberty dataset
20-03-28 02:09:24, INFO: [91mTest set: Accuracy(FPR95): 0.95142000
[0m
20-03-28 02:09:24, INFO: Test on notredame dataset
20-03-28 02:10:16, INFO: [91mTest set: Accuracy(FPR95): 0.95316000
[0m
20-03-28 02:10:16, INFO: Test on reichstag dataset
20-03-28 02:11:12, INFO: [91mTest set: Accuracy(FPR95): 0.95348000
[0m
20-03-28 02:11:12, INFO: Test on brandenburg_gate dataset
20-03-28 02:12:00, INFO: [91mTest set: Accuracy(FPR95): 0.95454000
[0m
20-03-28 02:13:53, INFO: Train on buckingham_palace
20-03-28 02:38:05, INFO: models/train_on_challenge_data/checkpoint_20-03-28_02:38:04_9.pth
20-03-28 02:38:05, INFO: Train on colosseum_exterior
20-03-28 03:02:18, INFO: models/train_on_challenge_data/checkpoint_20-03-28_03:02:17_9.pth
20-03-28 03:02:18, INFO: Test on liberty dataset
20-03-28 03:03:06, INFO: [91mTest set: Accuracy(FPR95): 0.95138000
[0m
20-03-28 03:03:06, INFO: Test on notredame dataset
20-03-28 03:03:56, INFO: [91mTest set: Accuracy(FPR95): 0.95336000
[0m
20-03-28 03:03:56, INFO: Test on reichstag dataset
20-03-28 03:04:45, INFO: [91mTest set: Accuracy(FPR95): 0.95378000
[0m
20-03-28 03:04:45, INFO: Test on brandenburg_gate dataset
20-03-28 03:05:32, INFO: [91mTest set: Accuracy(FPR95): 0.95340000
[0m
20-03-28 09:47:26, INFO: 

================ IMAGE MATCHING CHALLENGE 2020 ==================


20-03-28 09:53:20, INFO: {'dataset': {'dataroot': 'data', 'model_dir': 'models', 'train_mean_image': 0.443728476019, 'train_std_image': 0.20197947209}, 'experiment_name': 'train_on_challenge_data', 'loss': 'triplet_margin', 'batch_reduce': 'min', 'num_workers': 0, 'anchorave': False, 'resume': '', 'start_epoch': 0, 'epochs': 10, 'anchorswap': True, 'batch_size': 1024, 'test_batch_size': 1024, 'n_triplets': 5000000, 'margin': 1.0, 'learning_rate': 10.0, 'fliprot': False, 'augmentation': False, 'lr_decay': 1e-06, 'weight_decay': 0.0001, 'environment': {'use_cuda': True, 'gpu_id': 3, 'seed': 0, 'log_interval': 10}}
20-03-28 09:53:20, INFO: Train on buckingham_palace
20-03-28 11:50:57, INFO: models/train_on_challenge_data/checkpoint_20-03-28_11:50:56_0.pth
20-03-28 11:50:57, INFO: Train on colosseum_exterior
20-03-28 13:48:32, INFO: models/train_on_challenge_data/checkpoint_20-03-28_13:48:31_0.pth
20-03-28 13:48:32, INFO: Test on liberty dataset
20-03-28 13:49:12, INFO: [91mTest set: Accuracy(FPR95): 0.12952000
[0m
20-03-28 13:49:12, INFO: Test on notredame dataset
20-03-28 13:49:52, INFO: [91mTest set: Accuracy(FPR95): 0.07988000
[0m
20-03-28 13:49:52, INFO: Test on reichstag dataset
20-03-28 13:50:32, INFO: [91mTest set: Accuracy(FPR95): 0.00416000
[0m
20-03-28 13:50:32, INFO: Test on brandenburg_gate dataset
20-03-28 13:51:11, INFO: [91mTest set: Accuracy(FPR95): 0.00956000
[0m
20-03-28 13:56:14, INFO: Train on buckingham_palace
20-03-28 15:53:45, INFO: models/train_on_challenge_data/checkpoint_20-03-28_15:53:45_1.pth
20-03-28 15:53:45, INFO: Train on colosseum_exterior
20-03-28 17:51:20, INFO: models/train_on_challenge_data/checkpoint_20-03-28_17:51:19_1.pth
20-03-28 17:51:20, INFO: Test on liberty dataset
20-03-28 17:52:00, INFO: [91mTest set: Accuracy(FPR95): 0.10736000
[0m
20-03-28 17:52:00, INFO: Test on notredame dataset
20-03-28 17:52:40, INFO: [91mTest set: Accuracy(FPR95): 0.06534000
[0m
20-03-28 17:52:40, INFO: Test on reichstag dataset
20-03-28 17:53:19, INFO: [91mTest set: Accuracy(FPR95): 0.00396000
[0m
20-03-28 17:53:19, INFO: Test on brandenburg_gate dataset
20-03-28 17:53:59, INFO: [91mTest set: Accuracy(FPR95): 0.00720000
[0m
20-03-28 17:59:02, INFO: Train on buckingham_palace
20-03-28 19:56:38, INFO: models/train_on_challenge_data/checkpoint_20-03-28_19:56:37_2.pth
20-03-28 19:56:38, INFO: Train on colosseum_exterior
20-03-28 21:54:11, INFO: models/train_on_challenge_data/checkpoint_20-03-28_21:54:10_2.pth
20-03-28 21:54:11, INFO: Test on liberty dataset
20-03-28 21:54:51, INFO: [91mTest set: Accuracy(FPR95): 0.09914000
[0m
20-03-28 21:54:51, INFO: Test on notredame dataset
20-03-28 21:55:30, INFO: [91mTest set: Accuracy(FPR95): 0.06022000
[0m
20-03-28 21:55:30, INFO: Test on reichstag dataset
20-03-28 21:56:10, INFO: [91mTest set: Accuracy(FPR95): 0.00416000
[0m
20-03-28 21:56:10, INFO: Test on brandenburg_gate dataset
20-03-28 21:56:50, INFO: [91mTest set: Accuracy(FPR95): 0.00928000
[0m
20-03-28 22:01:49, INFO: Train on buckingham_palace
20-03-28 23:59:24, INFO: models/train_on_challenge_data/checkpoint_20-03-28_23:59:23_3.pth
20-03-28 23:59:24, INFO: Train on colosseum_exterior
20-03-29 01:56:59, INFO: models/train_on_challenge_data/checkpoint_20-03-29_01:56:58_3.pth
20-03-29 01:56:59, INFO: Test on liberty dataset
20-03-29 01:57:39, INFO: [91mTest set: Accuracy(FPR95): 0.09676000
[0m
20-03-29 01:57:39, INFO: Test on notredame dataset
20-03-29 01:58:18, INFO: [91mTest set: Accuracy(FPR95): 0.05864000
[0m
20-03-29 01:58:18, INFO: Test on reichstag dataset
20-03-29 01:58:58, INFO: [91mTest set: Accuracy(FPR95): 0.00356000
[0m
20-03-29 01:58:58, INFO: Test on brandenburg_gate dataset
20-03-29 01:59:38, INFO: [91mTest set: Accuracy(FPR95): 0.00690000
[0m
20-03-29 02:04:48, INFO: Train on buckingham_palace
20-03-29 04:02:23, INFO: models/train_on_challenge_data/checkpoint_20-03-29_04:02:22_4.pth
20-03-29 04:02:23, INFO: Train on colosseum_exterior
20-03-29 06:00:00, INFO: models/train_on_challenge_data/checkpoint_20-03-29_05:59:59_4.pth
20-03-29 06:00:00, INFO: Test on liberty dataset
20-03-29 06:00:40, INFO: [91mTest set: Accuracy(FPR95): 0.08912000
[0m
20-03-29 06:00:40, INFO: Test on notredame dataset
20-03-29 06:01:20, INFO: [91mTest set: Accuracy(FPR95): 0.05446000
[0m
20-03-29 06:01:20, INFO: Test on reichstag dataset
20-03-29 06:01:59, INFO: [91mTest set: Accuracy(FPR95): 0.00264000
[0m
20-03-29 06:01:59, INFO: Test on brandenburg_gate dataset
20-03-29 06:02:39, INFO: [91mTest set: Accuracy(FPR95): 0.00572000
[0m
20-03-29 06:07:47, INFO: Train on buckingham_palace
20-03-29 08:05:13, INFO: models/train_on_challenge_data/checkpoint_20-03-29_08:05:12_5.pth
20-03-29 08:05:13, INFO: Train on colosseum_exterior
20-03-29 10:02:45, INFO: models/train_on_challenge_data/checkpoint_20-03-29_10:02:44_5.pth
20-03-29 10:02:45, INFO: Test on liberty dataset
20-03-29 10:03:26, INFO: [91mTest set: Accuracy(FPR95): 0.95046000
[0m
20-03-29 10:03:26, INFO: Test on notredame dataset
20-03-29 10:04:07, INFO: [91mTest set: Accuracy(FPR95): 0.95156000
[0m
20-03-29 10:04:07, INFO: Test on reichstag dataset
20-03-29 10:04:49, INFO: [91mTest set: Accuracy(FPR95): 0.95230000
[0m
20-03-29 10:04:49, INFO: Test on brandenburg_gate dataset
20-03-29 10:05:29, INFO: [91mTest set: Accuracy(FPR95): 0.95162000
[0m
20-03-29 10:10:39, INFO: Train on buckingham_palace
20-03-30 03:36:02, INFO: 

================ IMAGE MATCHING CHALLENGE 2020 ==================


20-03-30 03:36:02, INFO: num_3d_points: 942191
20-03-30 03:36:02, INFO: generate 5000000 triplets
