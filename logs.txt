20-05-22 00:37:38, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:37:38, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 00:37:38, INFO: No.points: 17823
20-05-22 00:37:38, INFO: No.images: 75
20-05-22 00:37:38, INFO: max no.pairs: 2775
20-05-22 00:37:40, INFO: Generated 2775 pairs of images
20-05-22 00:37:43, INFO: Saved data at: /media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output/reichstag.npy
20-05-22 00:37:43, INFO: Completed

20-05-22 00:37:44, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:37:44, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'colosseum_exterior')]
20-05-22 00:37:50, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:37:50, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'hagia_sophia_interior')]
20-05-22 00:37:54, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:37:54, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'palace_of_westminster')]
20-05-22 00:37:56, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:37:56, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'prague_old_town_square')]
20-05-22 00:38:05, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:38:05, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'sacre_coeur')]
20-05-22 00:38:08, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:38:08, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'taj_mahal')]
20-05-22 00:38:08, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:38:08, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'trevi_fountain')]
20-05-22 00:38:08, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:38:08, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'buckingham_palace')]
20-05-22 00:38:10, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 00:38:10, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'pantheon_exterior')]
20-05-22 01:23:54, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 01:23:54, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 01:24:03, INFO: No.points: 17823
20-05-22 01:24:03, INFO: No.images: 75
20-05-22 01:24:03, INFO: max no.pairs: 2775
20-05-22 01:24:10, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 01:24:10, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 01:24:11, INFO: No.points: 17823
20-05-22 01:24:11, INFO: No.images: 75
20-05-22 01:24:11, INFO: max no.pairs: 2775
20-05-22 10:01:06, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 10:01:06, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 10:01:19, INFO: No.points: 17823
20-05-22 10:01:19, INFO: No.images: 75
20-05-22 10:01:19, INFO: max no.pairs: 2775
20-05-22 10:03:55, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
20-05-22 10:03:55, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/3/sys.pyi
20-05-22 10:07:31, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 10:07:31, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 10:07:31, INFO: No.points: 17823
20-05-22 10:07:31, INFO: No.images: 75
20-05-22 10:07:31, INFO: max no.pairs: 2775
20-05-22 10:07:55, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 10:07:55, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 10:07:55, INFO: No.points: 17823
20-05-22 10:07:55, INFO: No.images: 75
20-05-22 10:07:55, INFO: max no.pairs: 2775
20-05-22 10:08:13, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 10:08:13, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 10:08:13, INFO: No.points: 17823
20-05-22 10:08:13, INFO: No.images: 75
20-05-22 10:08:13, INFO: max no.pairs: 2775
20-05-22 10:08:30, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
20-05-22 10:08:30, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/3/sys.pyi
20-05-22 10:08:30, DEBUG: diff parser start
20-05-22 10:08:30, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:08:30, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:08:30, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:08:30, DEBUG: diff parser end
20-05-22 10:08:48, DEBUG: diff parser start
20-05-22 10:08:48, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:08:48, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:08:48, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:08:48, DEBUG: diff parser end
20-05-22 10:08:48, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/typing.py
20-05-22 10:08:48, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/3/typing.pyi
20-05-22 10:08:50, DEBUG: diff parser start
20-05-22 10:08:50, DEBUG: line_lengths old: 1; new: 2
20-05-22 10:08:50, DEBUG: -> code[replace] old[1:1] new[1:2]
20-05-22 10:08:50, DEBUG: parse_part from 1 to 2 (to 1 in part parser)
20-05-22 10:08:50, DEBUG: diff parser end
20-05-22 10:08:51, DEBUG: diff parser start
20-05-22 10:08:51, DEBUG: line_lengths old: 2; new: 2
20-05-22 10:08:51, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:51, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:51, DEBUG: -> code[replace] old[2:2] new[2:2]
20-05-22 10:08:51, DEBUG: parse_part from 2 to 2 (to 1 in part parser)
20-05-22 10:08:51, DEBUG: diff parser end
20-05-22 10:08:51, DEBUG: diff parser start
20-05-22 10:08:51, DEBUG: line_lengths old: 2; new: 2
20-05-22 10:08:51, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:51, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:51, DEBUG: -> code[replace] old[2:2] new[2:2]
20-05-22 10:08:51, DEBUG: parse_part from 2 to 2 (to 1 in part parser)
20-05-22 10:08:51, DEBUG: diff parser end
20-05-22 10:08:52, DEBUG: diff parser start
20-05-22 10:08:52, DEBUG: line_lengths old: 2; new: 2
20-05-22 10:08:52, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:52, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:52, DEBUG: -> code[replace] old[2:2] new[2:2]
20-05-22 10:08:52, DEBUG: parse_part from 2 to 2 (to 1 in part parser)
20-05-22 10:08:52, DEBUG: diff parser end
20-05-22 10:08:52, DEBUG: diff parser start
20-05-22 10:08:52, DEBUG: line_lengths old: 2; new: 2
20-05-22 10:08:52, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:52, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:52, DEBUG: -> code[replace] old[2:2] new[2:2]
20-05-22 10:08:52, DEBUG: parse_part from 2 to 2 (to 1 in part parser)
20-05-22 10:08:52, DEBUG: diff parser end
20-05-22 10:08:53, DEBUG: diff parser start
20-05-22 10:08:53, DEBUG: line_lengths old: 2; new: 2
20-05-22 10:08:53, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:53, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:53, DEBUG: -> code[replace] old[2:2] new[2:2]
20-05-22 10:08:53, DEBUG: parse_part from 2 to 2 (to 1 in part parser)
20-05-22 10:08:53, DEBUG: diff parser end
20-05-22 10:08:54, DEBUG: diff parser start
20-05-22 10:08:54, DEBUG: line_lengths old: 2; new: 2
20-05-22 10:08:54, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:54, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:54, DEBUG: -> code[replace] old[2:2] new[2:2]
20-05-22 10:08:54, DEBUG: parse_part from 2 to 2 (to 1 in part parser)
20-05-22 10:08:54, DEBUG: diff parser end
20-05-22 10:08:57, DEBUG: diff parser start
20-05-22 10:08:57, DEBUG: line_lengths old: 2; new: 3
20-05-22 10:08:57, DEBUG: -> code[equal] old[1:1] new[1:1]
20-05-22 10:08:57, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:57, DEBUG: -> code[replace] old[2:2] new[2:3]
20-05-22 10:08:57, DEBUG: parse_part from 2 to 3 (to 2 in part parser)
20-05-22 10:08:57, DEBUG: diff parser end
20-05-22 10:08:59, DEBUG: diff parser start
20-05-22 10:08:59, DEBUG: line_lengths old: 3; new: 3
20-05-22 10:08:59, DEBUG: -> code[equal] old[1:2] new[1:2]
20-05-22 10:08:59, DEBUG: copy old[1:1] new[1:1]
20-05-22 10:08:59, DEBUG: parse_part from 2 to 3 (to 2 in part parser)
20-05-22 10:08:59, DEBUG: -> code[replace] old[3:3] new[3:3]
20-05-22 10:08:59, DEBUG: diff parser end
20-05-22 10:09:04, DEBUG: diff parser start
20-05-22 10:09:04, DEBUG: line_lengths old: 3; new: 1
20-05-22 10:09:04, DEBUG: -> code[replace] old[1:3] new[1:1]
20-05-22 10:09:04, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:09:04, DEBUG: diff parser end
20-05-22 10:09:05, DEBUG: diff parser start
20-05-22 10:09:05, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:09:05, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:09:05, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:09:05, DEBUG: diff parser end
20-05-22 10:09:06, DEBUG: diff parser start
20-05-22 10:09:06, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:09:06, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:09:06, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:09:06, DEBUG: diff parser end
20-05-22 10:09:06, DEBUG: diff parser start
20-05-22 10:09:06, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:09:06, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:09:06, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:09:06, DEBUG: diff parser end
20-05-22 10:09:07, DEBUG: $HOME=/home/vutrungnghia
20-05-22 10:09:07, DEBUG: CONFIGDIR=/home/vutrungnghia/.config/matplotlib
20-05-22 10:09:07, DEBUG: matplotlib data path: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/matplotlib/mpl-data
20-05-22 10:09:07, DEBUG: loaded rc file /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
20-05-22 10:09:07, DEBUG: matplotlib version 3.1.3
20-05-22 10:09:07, DEBUG: interactive is False
20-05-22 10:09:07, DEBUG: platform is linux
20-05-22 10:09:07, DEBUG: loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', 'warnings', 're', 'enum', 'types', 'functools', '_functools', 'collections', '_collections_abc', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', '_locale', 'copyreg', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_linux_x86_64-linux-gnu', '_bootlocale', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.common', 'jedi.common.value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.inference.compiled.mixed', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_14', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'notebook', 'notebook.nbextensions', 'tarfile', 'zipfile', 'jupyter_core.utils', 'ipython_genutils.tempdir', 'notebook._version', 'notebook.config_manager', 'notebook.extensions', 'jupyter_core.application', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'colmap', 'colmap.scripts', 'colmap.scripts.python', 'colmap.scripts.python.read_write_model', 'multiprocessing.synchronize', 'jedi.inference.finder', 'jedi.inference.star_args', 'zmq.utils.garbage', 'seaborn', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
20-05-22 10:09:08, DEBUG: CACHEDIR=/home/vutrungnghia/.cache/matplotlib
20-05-22 10:09:08, DEBUG: Using fontManager instance from /home/vutrungnghia/.cache/matplotlib/fontlist-v310.json
20-05-22 10:09:08, DEBUG: Loaded backend module://ipykernel.pylab.backend_inline version unknown.
20-05-22 10:09:08, DEBUG: Loaded backend module://ipykernel.pylab.backend_inline version unknown.
20-05-22 10:09:09, DEBUG: diff parser start
20-05-22 10:09:09, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:09:09, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:09:09, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:09:09, DEBUG: diff parser end
20-05-22 10:09:09, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/seaborn/__init__.py
20-05-22 10:09:09, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/seaborn/palettes.py
20-05-22 10:09:09, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/seaborn/utils.py
20-05-22 10:09:09, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/seaborn/distributions.py
20-05-22 10:09:09, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/seaborn/miscplot.py
20-05-22 10:09:10, DEBUG: diff parser start
20-05-22 10:09:10, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:09:10, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:09:10, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:09:10, DEBUG: diff parser end
20-05-22 10:09:11, DEBUG: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal book normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Quicksand Light' (Quicksand-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'C059' (C059-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal demi normal>) = 11.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'P052' (P052-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'C059' (C059-Roman.otf) normal normal roman normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal semibold normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal roman normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal book normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal medium normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal roman normal>) = 11.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal medium normal>) = 11.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal bold condensed>) = 10.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal demi normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal medium normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Quicksand' (Quicksand-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal roman normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal semibold normal>) = 10.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Quicksand Medium' (Quicksand-Medium.ttf) normal normal medium normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Quicksand' (Quicksand-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal book normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'P052' (P052-Roman.otf) normal normal roman normal>) = 10.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal bold condensed>) = 11.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal book normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal roman normal>) = 11.145
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal bold normal>) = 10.335
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal light normal>) = 11.24
20-05-22 10:09:11, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:09:11, DEBUG: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
20-05-22 10:11:34, INFO: No.pair filter/all: 2775/2775
20-05-22 10:12:10, INFO: 
======== SUPERGLUE - DATA PREPROCESSING ========

20-05-22 10:12:10, INFO: [('input', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/input'), ('iou_thresold', 0.1), ('output', '/media/vutrungnghia/New Volume/P2-ImageMatchingChallenge/dataset/superglue/output'), ('scene', 'reichstag')]
20-05-22 10:12:10, INFO: No.points: 17823
20-05-22 10:12:10, INFO: No.images: 75
20-05-22 10:12:10, INFO: max no.pairs: 2775
20-05-22 10:12:17, INFO: No.pair filter/all: 185/2775
20-05-22 10:13:45, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
20-05-22 10:13:45, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/3/sys.pyi
20-05-22 10:14:10, DEBUG: diff parser start
20-05-22 10:14:10, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:10, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:10, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:10, DEBUG: diff parser end
20-05-22 10:14:11, DEBUG: diff parser start
20-05-22 10:14:11, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:11, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:11, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:11, DEBUG: diff parser end
20-05-22 10:14:13, DEBUG: diff parser start
20-05-22 10:14:13, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:13, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:13, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:13, DEBUG: diff parser end
20-05-22 10:14:25, DEBUG: diff parser start
20-05-22 10:14:25, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:25, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:25, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:25, DEBUG: diff parser end
20-05-22 10:14:42, DEBUG: diff parser start
20-05-22 10:14:42, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:42, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:42, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:42, DEBUG: diff parser end
20-05-22 10:14:50, DEBUG: diff parser start
20-05-22 10:14:50, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:50, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:50, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:50, DEBUG: diff parser end
20-05-22 10:14:51, DEBUG: diff parser start
20-05-22 10:14:51, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:14:51, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:14:51, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:14:51, DEBUG: diff parser end
20-05-22 10:15:06, DEBUG: diff parser start
20-05-22 10:15:06, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:15:06, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:15:06, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:15:06, DEBUG: diff parser end
20-05-22 10:15:10, DEBUG: diff parser start
20-05-22 10:15:10, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:15:10, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:15:10, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:15:10, DEBUG: diff parser end
20-05-22 10:15:15, DEBUG: diff parser start
20-05-22 10:15:15, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:15:15, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:15:15, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:15:15, DEBUG: diff parser end
20-05-22 10:35:01, DEBUG: diff parser start
20-05-22 10:35:01, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:35:01, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:35:01, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:35:01, DEBUG: diff parser end
20-05-22 10:35:02, DEBUG: diff parser start
20-05-22 10:35:02, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:35:02, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:35:02, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:35:02, DEBUG: diff parser end
20-05-22 10:35:43, DEBUG: diff parser start
20-05-22 10:35:43, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:35:43, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:35:43, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:35:43, DEBUG: diff parser end
20-05-22 10:42:24, INFO: avg matches: 1372.8540540540541
20-05-22 10:43:11, INFO: avg keypoints0: 6529.513513513513
20-05-22 10:43:12, INFO: avg keypoints1: 6633.502702702703
20-05-22 10:44:11, INFO: avg matches: 1372.8540540540541
20-05-22 10:44:11, INFO: avg keypoints0: 6529.513513513513
20-05-22 10:44:11, INFO: avg keypoints1: 6633.502702702703
20-05-22 10:44:11, INFO: avg points3d_IDs0: 2849.8
20-05-22 10:44:11, INFO: avg points3d_IDs1: 3047.3945945945948
20-05-22 10:44:11, INFO: avg has_descriptors0: 3630.672972972973
20-05-22 10:45:20, INFO: avg matches: 1372.8540540540541
20-05-22 10:45:20, INFO: avg keypoints0: 6529.513513513513
20-05-22 10:45:20, INFO: avg keypoints1: 6633.502702702703
20-05-22 10:45:20, INFO: avg points3d_IDs0: 2849.8
20-05-22 10:45:20, INFO: avg points3d_IDs1: 3047.3945945945948
20-05-22 10:45:20, INFO: avg has_descriptors0: 3501.8594594594597
20-05-22 10:45:20, INFO: avg has_descriptors1: 3759.4864864864867
20-05-22 10:46:21, DEBUG: $HOME=/home/vutrungnghia
20-05-22 10:46:21, DEBUG: CONFIGDIR=/home/vutrungnghia/.config/matplotlib
20-05-22 10:46:21, DEBUG: matplotlib data path: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/matplotlib/mpl-data
20-05-22 10:46:21, DEBUG: loaded rc file /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
20-05-22 10:46:21, DEBUG: matplotlib version 3.1.3
20-05-22 10:46:21, DEBUG: interactive is False
20-05-22 10:46:21, DEBUG: platform is linux
20-05-22 10:46:21, DEBUG: loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', 'warnings', 're', 'enum', 'types', 'functools', '_functools', 'collections', '_collections_abc', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', '_locale', 'copyreg', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_linux_x86_64-linux-gnu', '_bootlocale', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.common', 'jedi.common.value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common.utils', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.inference.compiled.mixed', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_14', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'notebook', 'notebook.nbextensions', 'tarfile', 'zipfile', 'jupyter_core.utils', 'ipython_genutils.tempdir', 'notebook._version', 'notebook.config_manager', 'notebook.extensions', 'jupyter_core.application', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'colmap', 'colmap.scripts', 'colmap.scripts.python', 'colmap.scripts.python.read_write_model', 'multiprocessing.synchronize', 'jedi.inference.finder', 'jedi.inference.star_args', 'zmq.utils.garbage', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
20-05-22 10:46:21, DEBUG: CACHEDIR=/home/vutrungnghia/.cache/matplotlib
20-05-22 10:46:21, DEBUG: Using fontManager instance from /home/vutrungnghia/.cache/matplotlib/fontlist-v310.json
20-05-22 10:46:21, DEBUG: Loaded backend module://ipykernel.pylab.backend_inline version unknown.
20-05-22 10:46:21, DEBUG: Loaded backend module://ipykernel.pylab.backend_inline version unknown.
20-05-22 10:47:09, DEBUG: diff parser start
20-05-22 10:47:09, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:47:09, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:47:09, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:47:09, DEBUG: diff parser end
20-05-22 10:47:09, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/typing.py
20-05-22 10:47:09, DEBUG: pickle loaded: /home/vutrungnghia/.vscode/extensions/ms-python.python-2020.5.80290/pythonFiles/lib/python/jedi/third_party/typeshed/stdlib/3/typing.pyi
20-05-22 10:47:10, DEBUG: diff parser start
20-05-22 10:47:10, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:47:10, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:47:10, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:47:10, DEBUG: diff parser end
20-05-22 10:47:11, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/PIL/__init__.py
20-05-22 10:47:11, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/PIL/ImageFile.py
20-05-22 10:47:11, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/PIL/Image.py
20-05-22 10:48:39, DEBUG: diff parser start
20-05-22 10:48:39, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:48:39, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:48:39, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:48:39, DEBUG: diff parser end
20-05-22 10:49:05, DEBUG: diff parser start
20-05-22 10:49:05, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:05, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:05, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:05, DEBUG: diff parser end
20-05-22 10:49:06, DEBUG: diff parser start
20-05-22 10:49:06, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:06, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:06, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:06, DEBUG: diff parser end
20-05-22 10:49:06, DEBUG: diff parser start
20-05-22 10:49:06, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:06, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:06, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:06, DEBUG: diff parser end
20-05-22 10:49:10, DEBUG: diff parser start
20-05-22 10:49:10, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:10, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:10, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:10, DEBUG: diff parser end
20-05-22 10:49:11, DEBUG: diff parser start
20-05-22 10:49:11, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:11, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:11, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:11, DEBUG: diff parser end
20-05-22 10:49:22, DEBUG: diff parser start
20-05-22 10:49:22, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:22, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:22, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:22, DEBUG: diff parser end
20-05-22 10:49:37, DEBUG: diff parser start
20-05-22 10:49:37, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:49:37, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:49:37, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:49:37, DEBUG: diff parser end
20-05-22 10:52:53, DEBUG: diff parser start
20-05-22 10:52:53, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:52:53, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:52:53, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:52:53, DEBUG: diff parser end
20-05-22 10:52:54, DEBUG: diff parser start
20-05-22 10:52:54, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:52:54, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:52:54, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:52:54, DEBUG: diff parser end
20-05-22 10:53:00, DEBUG: diff parser start
20-05-22 10:53:00, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:00, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:00, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:00, DEBUG: diff parser end
20-05-22 10:53:13, DEBUG: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal book normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal bold condensed>) = 0.5349999999999999
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Quicksand Light' (Quicksand-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'C059' (C059-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal demi normal>) = 11.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'P052' (P052-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'C059' (C059-Roman.otf) normal normal roman normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal bold condensed>) = 1.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal semibold normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal roman normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal book normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal medium normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal roman normal>) = 11.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal medium normal>) = 11.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal bold condensed>) = 10.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal demi normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal medium normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal bold condensed>) = 11.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Quicksand' (Quicksand-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal roman normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal bold condensed>) = 10.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal semibold normal>) = 10.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Quicksand Medium' (Quicksand-Medium.ttf) normal normal medium normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Quicksand' (Quicksand-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal book normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'P052' (P052-Roman.otf) normal normal roman normal>) = 10.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal bold condensed>) = 11.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal book normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal light normal>) = 0.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal regular normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal roman normal>) = 11.145
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal bold normal>) = 10.335
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal light normal>) = 11.24
20-05-22 10:53:13, DEBUG: findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
20-05-22 10:53:13, DEBUG: findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
20-05-22 10:53:30, DEBUG: diff parser start
20-05-22 10:53:30, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:30, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:30, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:30, DEBUG: diff parser end
20-05-22 10:53:31, DEBUG: diff parser start
20-05-22 10:53:31, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:31, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:31, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:31, DEBUG: diff parser end
20-05-22 10:53:32, DEBUG: diff parser start
20-05-22 10:53:32, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:32, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:32, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:32, DEBUG: diff parser end
20-05-22 10:53:32, DEBUG: diff parser start
20-05-22 10:53:32, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:32, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:32, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:32, DEBUG: diff parser end
20-05-22 10:53:33, DEBUG: diff parser start
20-05-22 10:53:33, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:33, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:33, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:33, DEBUG: diff parser end
20-05-22 10:53:33, DEBUG: diff parser start
20-05-22 10:53:33, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:33, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:33, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:33, DEBUG: diff parser end
20-05-22 10:53:34, DEBUG: diff parser start
20-05-22 10:53:34, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:34, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:34, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:34, DEBUG: diff parser end
20-05-22 10:53:39, DEBUG: diff parser start
20-05-22 10:53:39, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:39, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:39, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:39, DEBUG: diff parser end
20-05-22 10:53:41, DEBUG: diff parser start
20-05-22 10:53:41, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:41, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:41, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:41, DEBUG: diff parser end
20-05-22 10:53:43, DEBUG: diff parser start
20-05-22 10:53:43, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:43, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:43, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:43, DEBUG: diff parser end
20-05-22 10:53:43, DEBUG: pickle loaded: /home/vutrungnghia/miniconda3/envs/env_36/lib/python3.6/site-packages/numpy/__init__.py
20-05-22 10:53:51, DEBUG: diff parser start
20-05-22 10:53:51, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:53:51, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:53:51, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:53:51, DEBUG: diff parser end
20-05-22 10:55:01, DEBUG: diff parser start
20-05-22 10:55:01, DEBUG: line_lengths old: 1; new: 1
20-05-22 10:55:01, DEBUG: -> code[replace] old[1:1] new[1:1]
20-05-22 10:55:01, DEBUG: parse_part from 1 to 1 (to 0 in part parser)
20-05-22 10:55:01, DEBUG: diff parser end
